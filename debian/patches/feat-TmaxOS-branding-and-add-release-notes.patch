From: Junyeop Kim <junyeop_kim@tmax.co.kr>
Date: Thu, 8 Jul 2021 12:46:31 +0900
Subject: [feat] TmaxOS branding and add release notes

- change logo for os update
- add release notes in update dialog
---
 plugins/core/gs-plugin-generic-updates.c |  47 +++++++++++-
 po/ko.po                                 |  29 +++++++-
 src/gs-app-row.c                         |   2 +-
 src/gs-update-dialog.c                   | 123 +++++++++++++++++++++++++++++++
 src/gs-update-dialog.ui                  |  54 +++++++++++++-
 src/gtk-style.css                        |   5 ++
 src/meson.build                          |   3 +-
 src/tmaxos-release.c                     | 114 ++++++++++++++++++++++++++++
 src/tmaxos-release.h                     |  15 ++++
 9 files changed, 383 insertions(+), 9 deletions(-)
 create mode 100644 src/tmaxos-release.c
 create mode 100644 src/tmaxos-release.h

diff --git a/plugins/core/gs-plugin-generic-updates.c b/plugins/core/gs-plugin-generic-updates.c
index 8ca56e1..621b9a5 100644
--- a/plugins/core/gs-plugin-generic-updates.c
+++ b/plugins/core/gs-plugin-generic-updates.c
@@ -10,6 +10,9 @@
 
 #include <glib/gi18n.h>
 #include <gnome-software.h>
+#include <json-glib/json-glib.h>
+#include <sys/stat.h>
+#include <time.h>
 
 void
 gs_plugin_initialize (GsPlugin *plugin)
@@ -42,6 +45,41 @@ gs_plugin_generic_updates_get_os_update (GsPlugin *plugin)
 	GsApp *app;
 	const gchar *id = "org.gnome.Software.OsUpdate";
 	g_autoptr(AsIcon) ic = NULL;
+  g_autoptr(GsOsRelease) os = NULL;
+  const gchar *os_ver = NULL;
+  const gchar *os_summary = NULL;
+  g_autoptr(SoupMessage) msg = NULL;
+  g_autoptr(JsonParser) parser = NULL;
+  JsonNode *root = NULL;
+  JsonObject *obj = NULL;
+  const gchar *os_latest = NULL;
+  guint status_code;
+
+  /* get last modification time */
+  struct stat buf;
+  char time[50] = {0,};
+  stat ("/etc/os-release", &buf);
+  strftime(time, 50, "%Y-%m-%d", localtime(&buf.st_mtime));
+
+  /* get latest os version */
+  msg = soup_message_new (SOUP_METHOD_GET, "http://220.90.208.56/release-notes/latest");
+  status_code = soup_session_send_message (gs_plugin_get_soup_session (plugin), msg);
+  if (status_code == SOUP_STATUS_OK) {
+    parser = json_parser_new ();
+    json_parser_load_from_data (parser, msg->response_body->data, -1, NULL);
+    root = json_parser_get_root (parser);
+    obj = json_node_get_object (root);
+    os_latest = json_object_get_string_member (obj, "latestVersion");
+  }
+
+  /* get current os version */
+  os = gs_os_release_new (NULL);
+  os_ver = gs_os_release_get_version_id (os);
+  os_summary =
+    g_strconcat(_("Update version"), ":   ", "TmaxOS ", os_latest, "\n",
+                _("Current version"), ":   ", "TmaxOS ", os_ver, "\n",
+                _("Last installed"), ":   ", time,
+                NULL);
 
 	/* create new */
 	app = gs_app_new (id);
@@ -53,19 +91,22 @@ gs_plugin_generic_updates_get_os_update (GsPlugin *plugin)
 			 GS_APP_QUALITY_NORMAL,
 			 /* TRANSLATORS: this is a group of updates that are not
 			  * packages and are not shown in the main list */
-			 _("OS Updates"));
+			 _("TmaxOS Updates"));
 	gs_app_set_summary (app,
 			    GS_APP_QUALITY_NORMAL,
 			    /* TRANSLATORS: this is a longer description of the
 			     * "OS Updates" string */
-			    _("Includes performance, stability and security improvements."));
+          os_summary);
 	gs_app_set_description (app,
 				GS_APP_QUALITY_NORMAL,
 				gs_app_get_summary (app));
 	ic = as_icon_new ();
 	as_icon_set_kind (ic, AS_ICON_KIND_STOCK);
-	as_icon_set_name (ic, "software-update-available-symbolic");
+	as_icon_set_name (ic, "emblem-tmaxos");
 	gs_app_add_icon (app, ic);
+
+  g_free(os_summary);
+
 	return app;
 }
 
diff --git a/po/ko.po b/po/ko.po
index 7159f52..829f007 100644
--- a/po/ko.po
+++ b/po/ko.po
@@ -3220,10 +3220,18 @@ msgstr "업데이트"
 msgid "Downgrades"
 msgstr "다운그레이드"
 
+#: src/gs-update-dialog.c:635
+msgid "Release Notes"
+msgstr "릴리즈 노트"
+
 #: src/gs-update-dialog.ui:100
 msgid "No updates have been installed on this system."
 msgstr "이 시스템에 설치한 업데이트가 없습니다."
 
+#: src/gs-update-dialog.ui:100
+msgid "Release Note"
+msgstr "릴리즈 노트"
+
 #: src/gs-update-monitor.c:111
 msgid "Security Updates Pending"
 msgstr "대기 중인 보안 업데이트"
@@ -4072,11 +4080,26 @@ msgstr "참고 자료"
 msgid "Utilities"
 msgstr "유틸리티"
 
+#. TRANSLATORS:
+#: plugins/core/gs-plugin-generic-updates.c:50
+msgid "Update version"
+msgstr "업데이트 버전"
+
+#. TRANSLATORS:
+#: plugins/core/gs-plugin-generic-updates.c:50
+msgid "Current version"
+msgstr "현재 버전"
+
+#. TRANSLATORS:
+#: plugins/core/gs-plugin-generic-updates.c:51
+msgid "Last installed"
+msgstr "마지막 업데이트 날짜"
+
 #. TRANSLATORS: this is a group of updates that are not
 #. * packages and are not shown in the main list
-#: plugins/core/gs-plugin-generic-updates.c:56
-msgid "OS Updates"
-msgstr "운영체제 업데이트"
+#: plugins/core/gs-plugin-generic-updates.c:64
+msgid "TmaxOS Updates"
+msgstr "TmaxOS 업데이트"
 
 #. TRANSLATORS: this is a longer description of the
 #. * "OS Updates" string
diff --git a/src/gs-app-row.c b/src/gs-app-row.c
index 721d729..9e264d5 100644
--- a/src/gs-app-row.c
+++ b/src/gs-app-row.c
@@ -269,7 +269,7 @@ gs_app_row_actually_refresh (GsAppRow *app_row)
 	/* join the description lines */
 	str = gs_app_row_get_description (app_row);
 	if (str != NULL) {
-		as_utils_string_replace (str, "\n", " ");
+		//as_utils_string_replace (str, "\n", " ");
 		gtk_label_set_label (GTK_LABEL (priv->description_label), str->str);
 		g_string_free (str, TRUE);
 	} else {
diff --git a/src/gs-update-dialog.c b/src/gs-update-dialog.c
index cd3c0b6..7193776 100644
--- a/src/gs-update-dialog.c
+++ b/src/gs-update-dialog.c
@@ -15,6 +15,7 @@
 #include "gs-app-row.h"
 #include "gs-update-list.h"
 #include "gs-common.h"
+#include "tmaxos-release.h"
 
 typedef struct {
 	gchar		*title;
@@ -43,8 +44,11 @@ struct _GsUpdateDialog
 	GtkWidget	*label_details;
 	GtkWidget	*label_name;
 	GtkWidget	*label_summary;
+  GtkWidget *label_release_note_content;
 	GtkWidget	*list_boxes[GS_UPDATE_DIALOG_SECTION_LAST];
 	GtkWidget	*list_box_installed_updates;
+  GtkWidget *list_box_release_notes;
+	GtkWidget	*os_release_box;
 	GtkWidget	*os_update_description;
 	GtkWidget	*os_update_box;
 	GtkWidget	*scrolledwindow;
@@ -611,6 +615,120 @@ create_section (GsUpdateDialog *dialog, GsUpdateDialogSection section)
 	gtk_style_context_add_class (context, "app-updates-section");
 }
 
+// @@
+static void
+release_notes_header_func (GtkListBoxRow *row,
+    GtkListBoxRow *before,
+    gpointer user_data)
+{
+  GtkStyleContext *context;
+  GtkWidget *header;
+  GtkWidget *label;
+
+  if (before == NULL) {
+    /* create header */
+    header = gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 3);
+    context = gtk_widget_get_style_context (header);
+    gtk_style_context_add_class (context, "app-listbox-header");
+
+    /* put label into the header */
+    label = gtk_label_new (_("Release Notes"));
+    gtk_widget_set_hexpand (label, TRUE);
+    gtk_container_add (GTK_CONTAINER (header), label);
+    gtk_widget_set_visible (label, TRUE);
+    gtk_widget_set_margin_start (label, 6);
+    gtk_label_set_xalign (GTK_LABEL (label), 0.0);
+    context = gtk_widget_get_style_context (label);
+    gtk_style_context_add_class (context, "app-listbox-header-title");
+  }
+  else {
+    header = gtk_separator_new (GTK_ORIENTATION_HORIZONTAL);
+  }
+
+  gtk_list_box_row_set_header (row, header);
+}
+
+static void
+release_notes_row_activated_cb (GtkListBox *list_box,
+    GtkListBoxRow *row,
+    GsUpdateDialog *dialog)
+{
+  GtkWidget *item;
+  TmaxosRelease *tos = tmaxos_release_new();
+  const gchar *content = NULL;
+
+  save_back_entry (dialog);
+
+  item = gtk_bin_get_child (GTK_BIN (row));
+  content = tmaxos_release_get_content (tos, gtk_label_get_text (GTK_LABEL (item)));
+
+  gtk_label_set_text (GTK_LABEL (dialog->label_release_note_content), content);
+
+  gtk_widget_set_visible (dialog->button_back, !g_queue_is_empty (dialog->back_entry_stack));
+
+  gtk_stack_set_transition_type (GTK_STACK (dialog->stack), GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT);
+  gtk_stack_set_visible_child_name (GTK_STACK (dialog->stack), "os-release-note");
+  gtk_stack_set_transition_type (GTK_STACK (dialog->stack), GTK_STACK_TRANSITION_TYPE_NONE);
+
+  g_free (content);
+  g_object_unref (tos);
+}
+
+static void
+create_release_notes (GsUpdateDialog *dialog)
+{
+  GtkStyleContext *context;
+  GtkWidget *label;
+  TmaxosRelease *tos;
+  GList *list;
+  GList *l;
+
+  dialog->list_box_release_notes = gtk_list_box_new ();
+  gtk_list_box_set_selection_mode (GTK_LIST_BOX (dialog->list_box_release_notes),
+                                   GTK_SELECTION_NONE);
+  gtk_list_box_set_header_func (GTK_LIST_BOX (dialog->list_box_release_notes),
+                                release_notes_header_func,
+                                dialog, NULL);
+  g_signal_connect (GTK_LIST_BOX (dialog->list_box_release_notes), "row-activated",
+                    G_CALLBACK (release_notes_row_activated_cb), dialog);
+  gtk_widget_set_visible (dialog->list_box_release_notes, TRUE);
+  gtk_widget_set_vexpand (dialog->list_box_release_notes, TRUE);
+  gtk_container_add (GTK_CONTAINER (dialog->os_release_box),
+                     dialog->list_box_release_notes);
+  gtk_widget_set_margin_top (dialog->list_box_release_notes, 0);
+
+  context = gtk_widget_get_style_context (dialog->list_box_release_notes);
+  gtk_style_context_add_class (context, "app-updates-section");
+
+  tos = tmaxos_release_new ();
+  list = tmaxos_release_get_list (tos);
+
+  for (l = list; l != NULL; l = l->next)
+  {
+    const gchar *item = l->data;
+    label = gtk_label_new (item);
+    g_object_set (label,
+                  "margin-start", 20,
+                  "margin-end", 0,
+                  "margin-top", 6,
+                  "margin-bottom", 6,
+                  "xalign", 0.0,
+                  "ellipsize", PANGO_ELLIPSIZE_END,
+                  NULL);
+
+    gtk_widget_set_halign (label, GTK_ALIGN_START);
+    gtk_widget_set_hexpand (label, TRUE);
+    gtk_widget_set_valign (label, GTK_ALIGN_CENTER);
+
+    gtk_widget_show_all (label);
+
+    gtk_list_box_insert (GTK_LIST_BOX (dialog->list_box_release_notes), label, -1);
+  }
+
+  g_list_free_full (list, g_free);
+  g_object_unref(tos);
+}
+
 void
 gs_update_dialog_show_update_details (GsUpdateDialog *dialog, GsApp *app)
 {
@@ -639,6 +757,9 @@ gs_update_dialog_show_update_details (GsUpdateDialog *dialog, GsApp *app)
 		gtk_label_set_text (GTK_LABEL (dialog->os_update_description),
 		                    gs_app_get_description (app));
 
+    /* show release notes */
+    create_release_notes (dialog);
+
 		/* clear existing data */
 		for (guint i = 0; i < GS_UPDATE_DIALOG_SECTION_LAST; i++) {
 			if (dialog->list_boxes[i] == NULL)
@@ -817,7 +938,9 @@ gs_update_dialog_class_init (GsUpdateDialogClass *klass)
 	gtk_widget_class_bind_template_child (widget_class, GsUpdateDialog, label_details);
 	gtk_widget_class_bind_template_child (widget_class, GsUpdateDialog, label_name);
 	gtk_widget_class_bind_template_child (widget_class, GsUpdateDialog, label_summary);
+	gtk_widget_class_bind_template_child (widget_class, GsUpdateDialog, label_release_note_content);
 	gtk_widget_class_bind_template_child (widget_class, GsUpdateDialog, list_box_installed_updates);
+	gtk_widget_class_bind_template_child (widget_class, GsUpdateDialog, os_release_box);
 	gtk_widget_class_bind_template_child (widget_class, GsUpdateDialog, os_update_description);
 	gtk_widget_class_bind_template_child (widget_class, GsUpdateDialog, os_update_box);
 	gtk_widget_class_bind_template_child (widget_class, GsUpdateDialog, scrolledwindow);
diff --git a/src/gs-update-dialog.ui b/src/gs-update-dialog.ui
index a83b026..e5200ff 100644
--- a/src/gs-update-dialog.ui
+++ b/src/gs-update-dialog.ui
@@ -242,11 +242,18 @@
                     <property name="margin_end">18</property>
                     <child>
                       <object class="GtkLabel" id="os_update_description">
-                        <property name="visible">True</property>
+                        <property name="visible">False</property>
                         <property name="xalign">0</property>
                         <property name="wrap">True</property>
                       </object>
                     </child>
+                    <child>
+                      <object class="GtkBox" id="os_release_box">
+                        <property name="visible">True</property>
+                        <property name="orientation">vertical</property>
+                        <property name="vexpand">False</property>
+                      </object>
+                    </child>
                     <child>
                       <object class="GtkBox" id="os_update_box">
                         <property name="visible">True</property>
@@ -261,6 +268,51 @@
                 <property name="name">os-update-list</property>
               </packing>
             </child>
+            <child>
+              <object class="GtkScrolledWindow" id="scrolledrelease">
+                <property name="visible">True</property>
+                <property name="can_focus">True</property>
+                <property name="vexpand">True</property>
+                <property name="hscrollbar_policy">never</property>
+                <property name="vscrollbar_policy">automatic</property>
+                <property name="shadow_type">none</property>
+                <child>
+                  <object class="GtkBox" id="box_release_note">
+                    <property name="visible">True</property>
+                    <property name="orientation">vertical</property>
+                    <property name="halign">start</property>
+                    <property name="margin_top">24</property>
+                    <property name="margin_bottom">18</property>
+                    <property name="margin_start">18</property>
+                    <property name="margin_end">18</property>
+                    <child>
+                      <object class="GtkLabel" id="label_release_note">
+                        <property name="visible">True</property>
+                        <property name="label" translatable="yes">Release Note</property>
+                        <property name="halign">start</property>
+                        <property name="margin_top">10</property>
+                        <property name="margin_start">10</property>
+                        <style>
+                          <class name="release-note-title"/>
+                        </style>
+                      </object>
+                    </child>
+                    <child>
+                      <object class="GtkLabel" id="label_release_note_content">
+                        <property name="visible">True</property>
+                        <property name="halign">start</property>
+                        <property name="wrap">True</property>
+                        <property name="margin_top">10</property>
+                        <property name="margin_start">10</property>
+                      </object>
+                    </child>
+                  </object>
+                </child>
+              </object>
+              <packing>
+                <property name="name">os-release-note</property>
+              </packing>
+            </child>
             <child>
               <object class="GtkScrolledWindow" id="scrolledwindow_installed_updates">
                 <property name="visible">True</property>
diff --git a/src/gtk-style.css b/src/gtk-style.css
index 4b5fcef..d7a0908 100644
--- a/src/gtk-style.css
+++ b/src/gtk-style.css
@@ -521,3 +521,8 @@ flowboxchild {
   font-weight: 400;
   font-size: 10pt;
 }
+
+.release-note-title {
+  font-weight: bold;
+  font-size: larger;
+}
diff --git a/src/meson.build b/src/meson.build
index 6581e77..5ccd76b 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -67,7 +67,8 @@ gnome_software_sources = [
   'gs-updates-page.c',
   'gs-updates-section.c',
   'gs-upgrade-banner.c',
-  'gs-vendor.c'
+  'gs-vendor.c',
+  'tmaxos-release.c'
 ]
 
 gnome_software_dependencies = [
diff --git a/src/tmaxos-release.c b/src/tmaxos-release.c
new file mode 100644
index 0000000..759ba06
--- /dev/null
+++ b/src/tmaxos-release.c
@@ -0,0 +1,114 @@
+#include "tmaxos-release.h"
+#include <json-glib/json-glib.h>
+#include <libsoup/soup.h>
+
+#define TMAXOS_URI "http://220.90.208.56/release-notes/"
+
+struct _TmaxosRelease
+{
+	GObject parent_instance;
+
+  SoupSession *soup;
+  JsonParser *parser;
+};
+
+G_DEFINE_TYPE (TmaxosRelease, tmaxos_release, G_TYPE_OBJECT)
+
+const gchar* tmaxos_release_get_content (TmaxosRelease *self, const gchar *name)
+{
+  const gchar *uri = g_strconcat (TMAXOS_URI, name, NULL);
+  SoupMessage *msg = NULL;
+  JsonNode *root;
+  JsonObject *obj;
+  const gchar *ret;
+  guint status_code;
+
+  msg = soup_message_new (SOUP_METHOD_GET, uri);
+  status_code = soup_session_send_message (self->soup, msg);
+  if (status_code != SOUP_STATUS_OK) {
+    g_object_unref (msg);
+    g_free (uri);
+    return NULL;
+  }
+
+  json_parser_load_from_data (self->parser, msg->response_body->data, -1, NULL);
+  root = json_parser_get_root (self->parser);
+  obj = json_node_get_object (root);
+
+  ret = json_object_get_string_member (obj, "releaseNoteContents");
+
+  g_object_unref (msg);
+  g_free (uri);
+
+  return g_strdup (ret);
+}
+
+GList* tmaxos_release_get_list (TmaxosRelease *self)
+{
+  const gchar *uri = g_strconcat (TMAXOS_URI, "list", NULL);
+  SoupMessage *msg = NULL;
+  JsonNode *root;
+  JsonObject *obj;
+  JsonArray *arr;
+  guint list_size;
+  GList *list = NULL;
+  guint status_code;
+
+  msg = soup_message_new (SOUP_METHOD_GET, uri);
+  status_code = soup_session_send_message (self->soup, msg);
+  if (status_code != SOUP_STATUS_OK) {
+    g_object_unref (msg);
+    g_free (uri);
+    return NULL;
+  }
+
+  json_parser_load_from_data (self->parser, msg->response_body->data, -1, NULL);
+  root = json_parser_get_root (self->parser);
+  obj = json_node_get_object (root);
+  arr = json_object_get_array_member (obj, "notelist");
+  list_size = json_array_get_length (arr);
+
+  for (guint i = 0; i < list_size; i++)
+  {
+    list = g_list_append (list, g_strdup (json_array_get_string_element (arr, i)));
+  }
+
+  g_object_unref (msg);
+  g_free (uri);
+
+  return list;
+}
+
+static void
+tmaxos_release_init (TmaxosRelease *self)
+{
+  self->soup = soup_session_new();
+  self->parser = json_parser_new();
+}
+
+static void
+tmaxos_release_finalize (GObject *object)
+{
+	TmaxosRelease *tos = TMAXOS_RELEASE (object);
+
+  g_object_unref(tos->soup);
+  g_object_unref(tos->parser);
+
+	G_OBJECT_CLASS (tmaxos_release_parent_class)->finalize (object);
+}
+
+static void
+tmaxos_release_class_init (TmaxosReleaseClass *klass)
+{
+	GObjectClass *object_class = G_OBJECT_CLASS (klass);
+	object_class->finalize = tmaxos_release_finalize;
+}
+
+TmaxosRelease *
+tmaxos_release_new (void)
+{
+	TmaxosRelease *tos;
+	tos = g_object_new (TMAXOS_TYPE_RELEASE, NULL);
+	return TMAXOS_RELEASE (tos);
+}
+
diff --git a/src/tmaxos-release.h b/src/tmaxos-release.h
new file mode 100644
index 0000000..115a227
--- /dev/null
+++ b/src/tmaxos-release.h
@@ -0,0 +1,15 @@
+#pragma once
+
+#include <glib-object.h>
+
+G_BEGIN_DECLS
+
+#define TMAXOS_TYPE_RELEASE (tmaxos_release_get_type ())
+
+G_DECLARE_FINAL_TYPE (TmaxosRelease, tmaxos_release, TMAXOS, RELEASE, GObject)
+
+TmaxosRelease *tmaxos_release_new (void);
+GList* tmaxos_release_get_list (TmaxosRelease *self);
+const gchar* tmaxos_release_get_content (TmaxosRelease *self, const gchar *name);
+
+G_END_DECLS
